pipeline {
  agent {
    docker {
      image 'windsekirun/jenkins-android-docker:1.1.1'
    }
  }
  options {
    skipStagesAfterUnstable()
  }
  stages {
    stage('Checkout'){
      steps{
        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/AvielCo/ParkNBark.git']]])
      }
    }
    stage ('Prepare'){
      steps {
        sh 'chmod +x ./gradlew'
      }
    }
    stage('Compile') {
      steps {
        sh './gradlew compileDebugSources'
      }
    }
    stage('Unit test') {
      steps {
        sh './gradlew testDebugUnitTest testDebugUnitTest'
        
      }
    }
    stage('Build APK') {
      steps {
        sh './gradlew assembleDebug'
      }
    }
    stage('Static Code Analysis') {
            steps {
                script {
                    sh './gradlew checkstyle'
                    recordIssues enabledForFailure: true, aggregatingResults: true, tool: checkStyle(pattern: 'app/build/reports/checkstyle/checkstyle.xml')
                }
            }
        }
    //stage ('Lintering') {
     // steps {
      // sh -p '$JENKINS_SSHD_PORT $JENKINS_HOSTNAME declarative-linter < Jenkinsfile'
      //}
   // }
  }
  post{
      failure{
        emailext(subject: '$JOB_NAME - Build# $BUILD_NUMBER - $BUILD_STATUS',
                 body: '$DEFAULT_CONTENT',
                 replyTo: 'avielco@ac.sce.ac.il',
                 to: 'avielco@ac.sce.ac.il'
       }
       always{
          mail to: 'emilyzo@ac.sce.ac.il',
          subject: "Job '${JOB_NAME}' (${BUILD_NUMBER})",
          body: "You can go to ${BUILD_URL} and check the build"
       }
    } 
}

  

